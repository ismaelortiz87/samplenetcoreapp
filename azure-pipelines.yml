trigger:
  branches:
    include:
    - master
variables:
- name: buildConfiguration
  value: 'Release'

stages:
- stage: Build
  jobs:
  - job: buildTheApp
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: NuGetToolInstaller@1

    - task: NuGetCommand@2
      inputs:
        restoreSolution: '$(solution)'

    - task: VSBuild@1
      inputs:
        solution: '$(solution)'
        msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:DesktopBuildPackageLocation="$(build.artifactStagingDirectory)\WebApp.zip" /p:DeployIisAppPath="Default Web Site"'
        platform: '$(buildPlatform)'
        configuration: '$(buildConfiguration)'
     
    - task: ArchiveFiles@2
      displayName: 'Zipping Generated Artifacts'
      inputs:
        rootFolderOrFile: 
        includeRootFolder: false
        archiveType: 'zip'
        archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.Repository.Name) - $(Build.SourceBranchName) - $(Build.BuildId).zip'
        replaceExistingArchive: true
       
    - task: PublishBuildArtifacts@1
      inputs:
          PathtoPublish: '$(Build.ArtifactStagingDirectory)'
          ArtifactName: 'drop'
          publishLocation: 'Container'
        
- stage: deploy
  jobs:
  - deployment: VMDeploy
    displayName: deploying onpremise
    pool:
      vmImage: 'Ubuntu-latest'
    environment:
     name: 'serautsqa01'
     resourceType: VirtualMachine
     resourceName: SERAUTSQA01
    strategy:
      runOnce:
        deploy:
          steps:
          - task: ExtractFiles@1
            inputs:
              archiveFilePatterns: '$(Pipeline.Workspace)/drop/**/*.zip'
              destinationFolder: '$(Pipeline.Workspace)/drop/$(Build.BuildId)'
              cleanDestinationFolder: true
              overwriteExistingFiles: true
          - task: IISWebAppManagementOnMachineGroup@0
            inputs:
              IISDeploymentType: 'IISWebsite'
              ActionIISWebsite: 'CreateOrUpdateWebsite'
              WebsiteName: 'netcorepoc'
              WebsitePhysicalPath: 'C:\netcorepoc'
              WebsitePhysicalPathAuth: 'WebsiteUserPassThrough'
              AddBinding: true
              CreateOrUpdateAppPoolForWebsite: true
              AppPoolNameForWebsite: 'netcorepoc'
              DotNetVersionForWebsite: 'No Managed Code'
              PipeLineModeForWebsite: 'Integrated'
              AppPoolIdentityForWebsite: 'ApplicationPoolIdentity'
          - task: IISWebAppDeploymentOnMachineGroup@0
            inputs:
              WebSiteName: 'netcorepoc'
              VirtualApplication: 'netcorepoc'
              Package: '$(Pipeline.Workspace)/drop/$(Build.BuildId)/.'
              TakeAppOfflineFlag: true
          - task: IISWebAppManagementOnMachineGroup@0
            inputs:
              IISDeploymentType: 'IISWebsite'
              ActionIISWebsite: 'StartWebsite'
              StartStopWebsiteName: 'netcorepoc'