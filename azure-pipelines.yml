trigger:
  branches:
    include:
    - none
variables:
- name: buildConfiguration
  value: 'Release'
- name: solution
  value: '**/*.sln'
- name:  'buildPlatform' 
  value: 'Any CPU'
stages:
- stage: Build
  jobs:
  - job: buildTheApp
    pool:
      vmImage: 'windows-latest'
    steps:
      - task: NuGetToolInstaller@1
      - task: NuGetCommand@2
        inputs:
          restoreSolution: '$(solution)'

      - task: VSBuild@1
        inputs:
          solution: '**\*.sln'
          platform: '$(buildPlatform)'
          configuration: 'Release'

      - task: PublishPipelineArtifact@1
        inputs:
          targetPath: '$(Pipeline.Workspace)'
          artifact: 'drop'
          publishLocation: 'pipeline'

      # - task: AzureRmWebAppDeployment@4
      #   inputs:
      #     ConnectionType: 'AzureRM'
      #     azureSubscription: 'io_subscription'
      #     appType: 'webApp'
      #     WebAppName: 'netcorepoc'
      #     packageForLinux: '$(Build.ArtifactStagingDirectory)/**/*.zip'
      - task: PublishBuildArtifacts@1
        inputs:
            PathtoPublish: '$(Build.ArtifactStagingDirectory)'
            ArtifactName: 'drop'
            publishLocation: 'Container'

#     - task: UseDotNet@2
#       inputs:
#         version: '5.0.x'
#         includePreviewVersions: true # Required for preview versions
      
#     - task: DotNetCoreCLI@2
#       displayName: 'dotnet build'
#       inputs:
#         command: 'build'
#         configuration: $(buildConfiguration)
      
#     - task: ArchiveFiles@2
#       displayName: 'Zipping Generated Artifacts'
#       inputs:
#           rootFolderOrFile: 
#           includeRootFolder: false
#           archiveType: 'zip'
#           archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.Repository.Name) - $(Build.SourceBranchName) - $(Build.BuildId).zip'
#           replaceExistingArchive: true
        
- stage: deploy
  jobs:
  - deployment: VMDeploy
    displayName: deploying onpremise
    pool:
      vmImage: 'windows-latest'
    environment:
     name: 'io-iis'
     resourceType: VirtualMachine
     resourceName: kuzko
    strategy:
      runOnce:
        deploy:
          steps:
          - task: ExtractFiles@1
            inputs:
              archiveFilePatterns: '$(Pipeline.Workspace)/drop/**/*.zip'
              destinationFolder: '$(Pipeline.Workspace)/drop/$(Build.BuildId)'
              cleanDestinationFolder: true
              overwriteExistingFiles: true
          - task: IISWebAppManagementOnMachineGroup@0
            inputs:
              IISDeploymentType: 'IISWebsite'
              ActionIISWebsite: 'CreateOrUpdateWebsite'
              WebsiteName: 'netcorepoc'
              WebsitePhysicalPath: 'C:\netcorepoc'
              WebsitePhysicalPathAuth: 'WebsiteUserPassThrough'
              AddBinding: true
              CreateOrUpdateAppPoolForWebsite: true
              AppPoolNameForWebsite: 'netcorepoc'
              DotNetVersionForWebsite: 'No Managed Code'
              PipeLineModeForWebsite: 'Integrated'
              AppPoolIdentityForWebsite: 'ApplicationPoolIdentity'
          - task: IISWebAppDeploymentOnMachineGroup@0
            inputs:
              WebSiteName: 'netcorepoc'
              VirtualApplication: 'netcorepoc'
              Package: '$(Pipeline.Workspace)/drop/$(Build.BuildId)/.'
              TakeAppOfflineFlag: true
          - task: IISWebAppManagementOnMachineGroup@0
            inputs:
              IISDeploymentType: 'IISWebsite'
              ActionIISWebsite: 'StartWebsite'
              StartStopWebsiteName: 'netcorepoc'